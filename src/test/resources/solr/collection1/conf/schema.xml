<?xml version="1.0" encoding="UTF-8" ?>
<schema name="example" version="1.5">

	<types>
		<fieldType name="string" class="solr.StrField"
			sortMissingLast="true" />
		<fieldType name="text_ws" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(&lt;(?:(?!&gt;).)*&gt;)\1" replacement=" $1 "/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
			</analyzer>
		</fieldType>

        <fieldtype name="textNoStem" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" />
                <filter class="solr.LowerCaseFilterFactory" />
                <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1" />
                <filter class="solr.LowerCaseFilterFactory" />
                <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
            </analyzer>
        </fieldtype>

        <fieldType name="text_general" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<!-- find p h1 h2 h3 h4 h5 elements an add in paragraph token -->
				<charFilter class="solr.PatternReplaceCharFilterFactory"
	                pattern="^|(&lt;(?:[pP]|[hH]\d)&gt;)" 
	                replacement="$1 xxxparagraphxxx xxxsentencexxx "/> 
	            <!-- find pattern "[sentence ending punctuation][space][Cap letter or number] 
	                   and replace punctuation with sentence token -->
	            <charFilter class="solr.PatternReplaceCharFilterFactory"
	                pattern="[.!?]\s+([A-Z0-9])"
	                replacement=" xxxsentencexxx $1"/>
				<tokenizer class="solr.StandardTokenizerFactory" />
                <filter class="solr.TokenOffsetPayloadTokenFilterFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"
					ignoreCase="true" expand="true" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>
        <fieldType name="text_general_stem" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<!-- find p h1 h2 h3 h4 h5 elements an add in paragraph token -->
				<charFilter class="solr.PatternReplaceCharFilterFactory"
	                pattern="^|(&lt;(?:[pP]|[hH]\d)&gt;)"
	                replacement="$1 xxxparagraphxxx xxxsentencexxx "/>
	            <!-- find pattern "[sentence ending punctuation][space][Cap letter or number]
	                   and replace punctuation with sentence token -->
	            <charFilter class="solr.PatternReplaceCharFilterFactory"
	                pattern="[.!?]\s+([A-Z0-9])"
	                replacement=" xxxsentencexxx $1"/>
				<tokenizer class="solr.StandardTokenizerFactory" />
                <filter class="solr.TokenOffsetPayloadTokenFilterFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"
					ignoreCase="true" expand="true" />
                <filter class="solr.PorterStemFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>
        <fieldType name="int" class="solr.TrieIntField" precisionStep="1" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="1" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="float" class="solr.TrieFloatField" precisionStep="1" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="double" class="solr.TrieDoubleField" precisionStep="1" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="1" positionIncrementGap="0"/>


	</types>

	<fields>
		<field name="_version_" type="long" indexed="true" stored="true"/>
		<field name="id" type="string" indexed="true" stored="true"
			required="true" />
    <field name="fruit" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
    <field name="animal" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
    <field name="x" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
		<field name="y" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
    <field name="z" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
    <field name="z1" type="textNoStem" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
    <field name="z2" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
    <field name="z3" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>

        <!--Stemming-->
        <field name="fruit_stem" type="text_general_stem" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>

        <field name="range" type="string" indexed="true" stored="true" />
        <field name="rangeInt" type="int" indexed="true" stored="true" />
        <field name="rangeLong" type="long" indexed="true" stored="true" />
        <field name="rangeFloat" type="float" indexed="true" stored="true" />
        <field name="rangeDouble" type="double" indexed="true" stored="true" />
        <field name="rangeDate" type="date" indexed="true" stored="true" />

	</fields>

	<uniqueKey>id</uniqueKey>
	<!--<defaultSearchField>text</defaultSearchField>-->

    <copyField source="fruit" dest="fruit_stem"/>

	<!--<copyField source="x" dest="text" />-->
	<!--<copyField source="y" dest="text" />-->
	<!--<copyField source="z" dest="text" />-->


</schema>
